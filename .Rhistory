#   geom_col()
View(champion_top_scorer2)
champion_top_scorer2 = gather(champion_top_scorer, event, total, champion_prop:not_champion_prop)
champion_top_scorer2
ggplot(champion_top_scorer2, aes(year, total, fill=event)) +
geom_bar()
champion_top_scorer2 = gather(champion_top_scorer, event, total, champion_prop:not_champion_prop)
champion_top_scorer2
ggplot(champion_top_scorer2, aes(year, total, fill=event)) +
geom_bar(stat = "identity", position = 'dodge')
champion_top_scorer2 = gather(champion_top_scorer, event, total, champion_prop:not_champion_prop)
champion_top_scorer2
ggplot(champion_top_scorer2, aes(year, total, fill=event)) +
geom_bar(stat = "identity", position = 'dodge')
champion_top_scorer2 = gather(champion_top_scorer, event, total, champion_prop:not_champion_prop)
champion_top_scorer2
ggplot(champion_top_scorer2, aes(year, total, fill=event)) +
geom_bar(stat = "identity", position = 'dodge') +
ggtitle("Comparison between champions and other teams", subtitle = "The proportion of goals by top scorer in each seasons") +
labs(x="Season", y="The proportion of goals by top scorer", color = "Season Champion")
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
library(lubridate)
source("./scripts/viridis.R")
source("./scripts/ggprob.R")
# get all dates
file_list <- list.files(path="./data")
# load all data
allData <- data.frame()
for(i in 1:length(file_list)){
# get file names
league <- paste("./data/", file_list[i], "/LeagueTable.csv", sep="")
standard <- paste("./data/", file_list[i], "/SquadStandardStats.csv", sep="")
goalkeep <- paste("./data/", file_list[i], "/SquadGoalkeeping.csv", sep="")
# load in each data table and merge it together
LeagueTable <- read.csv(league)
if( file.exists(standard) ){
SquadStandardStats <- read.csv(standard)
LeagueTable <- full_join(LeagueTable, SquadStandardStats, by="Squad")
}
if( file.exists(goalkeep) ){
SquadGoalkeeping <- read.csv(goalkeep)
LeagueTable <- full_join(LeagueTable, SquadGoalkeeping, by="Squad")
}
# add year column to the data
LeagueTable <- select(LeagueTable, -contains(".y")) %>%
mutate(year = substr(file_list[i], 6, 9))
LeagueTable <- LeagueTable %>%
top_n(LeagueTable, 20)
# combine the data into one big table
if( i != 1){
LeagueTable[setdiff(names(allData), names(LeagueTable))] <- NA
allData[setdiff(names(LeagueTable), names(allData))] <- NA
}
allData <- rbind(allData, LeagueTable)
}
allData
championNames <- allData %>%
filter(Rk == 1) %>%
group_by(Squad, Rk) %>%
summarize(
wins = n()
) %>%
ungroup() %>%
mutate(pr = wins/sum(wins)) %>%
arrange(desc(Rk), desc(wins))
championNames$Squad <- reorder(championNames$Squad, -championNames$pr)
ggplot(championNames, aes(x=Squad, y=pr, fill=factor(Rk))) +
geom_col() +
scale_fill_manual(values = c("#e05a5e", "#58e0d5")) +
xlab("Team") +
ylab("Probability of Winning League") +
ggtitle("Percentage of Championship Wins", subtitle = "by Team") +
theme(legend.position = "none")
champions <- allData %>%
filter(Rk == 1)
mean_pt = mean(champions$Pts)
z_pt = 1.960 #this is the 95% confidence level value
s_pt = sd(champions$Pts)
n_pt = nrow(champions)
CI_pt = mean_pt + c(-1,1) * z_pt * s_pt / sqrt(n_pt)
gnorm(mean_pt, s_pt, color = 'cyan') +
geom_vline(xintercept = CI_pt[1], color = 'hotpink', linetype = 2) +
geom_vline(xintercept = CI_pt[2], color = 'hotpink', linetype = 2) +
geom_text(aes(CI_pt[1],-0.001,label=round(CI_pt[1]))) +
geom_text(aes(CI_pt[2],-0.001,label=round(CI_pt[2]))) +
ggtitle('Normal distributions of champions points') +
xlab('points')
mean_wins = mean(champions$W.x)
z_wins = 1.960 #this is the 95% confidence level value
s_wins = sd(champions$W.x)
n_wins = nrow(champions)
CI_wins = mean_wins + c(-1,1) * z_wins * s_wins / sqrt(n_wins)
gnorm(mean_wins, s_wins, color = 'cyan') +
geom_vline(xintercept = CI_wins[1], color = 'hotpink', linetype = 2) +
geom_vline(xintercept = CI_wins[2], color = 'hotpink', linetype = 2) +
geom_text(aes(CI_wins[1],-0.002,label=round(CI_wins[1]))) +
geom_text(aes(CI_wins[2],-0.002,label=round(CI_wins[2]))) +
ggtitle('Normal distributions of champions wins') +
xlab('Number of Wins')
a <- allData %>%
filter(allData$Saves != "N/A") %>%
filter(Rk == "1") %>%
mutate(year = as.numeric(year)) %>%
select(Saves, year)
a %>%
ggplot(aes(x = year, y = Saves)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
ggtitle("Number of Saves of Champion")
lm0 <- lm(Saves~year, a)
library(modelr)
a <- a %>%
add_residuals(lm0) %>%
add_predictions(lm0)
ggplot(a, aes(x=year, y =resid)) +
geom_point() +
xlab("Years") +
ylab("Residuals") +
geom_hline(aes(yintercept=0), color="red", linetype = "dashed")
ci_a <- a %>%
pull(Saves)
t.test(ci_a)
b <- allData %>%
filter(allData$Saves != "N/A") %>%
filter(Rk == "1") %>%
mutate(year = as.numeric(year)) %>%
select(GF, year)
b %>%
ggplot(aes(x = year, y = GF)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
ylab("Goals") +
ggtitle("Number of Goals of Champion")
lm1 <- lm(GF~year, b)
library(modelr)
b <- b %>%
add_residuals(lm1) %>%
add_predictions(lm1)
ggplot(b, aes(x=year, y =resid)) +
geom_point() +
xlab("Years") +
ylab("Residuals") +
geom_hline(aes(yintercept=0), color="red", linetype = "dashed")
ci_b <- b %>%
pull(GF)
t.test(ci_b)
savesAndGoals <- allData %>%
mutate(Rk =
case_when(
Rk == 1 ~ "Champion",
TRUE ~ "Not Champion",
)
) %>%
group_by(Rk) %>%
select(Saves, GF, GA.x, Rk) %>%
drop_na()
savesAndGoals %>%
ggplot(aes(x=Saves, y=GF, color=as.factor(Rk))) +
geom_point(alpha = 0.5) +
geom_smooth(method="lm", se = FALSE) +
scale_color_manual(values = c("#e05a5e", "#58e0d5")) +
labs(color = "Season Champion") +
ggtitle("Goals vs Saves", subtitle = "By Chamion and Non-Champion teams") +
xlab("Saves (in a season)") +
ylab("Goals For (in a season)")
sgChamp <- savesAndGoals %>%
filter(Rk == "Champion")
sgNonChamp <- savesAndGoals %>%
filter(Rk != "Champion")
champLm <- lm(Saves~GF, sgChamp)
nonChampLm <-  lm(Saves~GF, sgNonChamp)
summary(lm(Saves~GF+Rk, savesAndGoals))
savesAndGoals %>%
ggplot(aes(x=Saves, y=GA.x, color=as.factor(Rk))) +
geom_point(alpha = 0.5) +
geom_smooth(method="lm", se = FALSE) +
scale_color_manual(values = c("#e05a5e", "#58e0d5")) +
labs(color = "Season Champion") +
ggtitle("Goals vs Saves", subtitle = "By Chamion and Non-Champion teams") +
xlab("Saves (in a season)") +
ylab("Goals Against (in a season)")
top_scorer <- champions %>%
mutate(top_scorer_goals = as.numeric(str_trim(str_sub(Top.Team.Scorer, -2, -1)))) %>%
# mutate(t2 = str_extract(Top.Team.Scorer, "[\d+][?!.*\d]$")) %>%
mutate(prop = top_scorer_goals / GF) %>%
mutate(year = as.numeric(year)) %>%
select(Squad, top_scorer_goals, GF, prop, year)
# ggplot(top_scorer, aes(x=year, y=prop)) +
#   geom_point() +
#   geom_smooth(method = "lm", se = FALSE, color = "hotpink") +
#   ggtitle("The proportion of goals by top scorer in each seasons") +
#   labs(x="Season", y="The proportion of goals by top scorer")
top_scorer2 <- allData %>%
mutate(Rk = case_when(Rk == 1 ~ "Champion",
TRUE ~ "Not Champion",)) %>%
mutate(top_scorer_goals = as.numeric(str_trim(str_sub(Top.Team.Scorer, -2, -1)))) %>%
mutate(prop = top_scorer_goals / GF) %>%
mutate(year = as.numeric(year)) %>%
select(Rk, top_scorer_goals, GF, prop, year)
not_champion_top_scorer <- top_scorer2 %>%
filter(Rk == "Not Champion") %>%
group_by(year) %>%
summarise(not_champion_prop = mean(prop))
champion_top_scorer <- top_scorer2 %>%
filter(Rk == "Champion") %>%
group_by(year) %>%
summarise(champion_prop = mean(prop)) %>%
inner_join(not_champion_top_scorer)
champion_top_scorer2 = gather(champion_top_scorer, event, total, champion_prop:not_champion_prop)
champion_top_scorer2
ggplot(champion_top_scorer2, aes(year, total, fill=event)) +
geom_bar(stat = "identity", position = 'dodge') +
ggtitle("Comparison between champions and other teams", subtitle = "The proportion of goals by top scorer in each seasons") +
labs(x="Season", y="The proportion of goals by top scorer", color = "Season Champion")
# lm_s = lm()
t.test(champion_top_scorer$champion_prop, champion_top_scorer$not_champion_prop, alternative = "greater")
# top_scorer2 %>%
#   group_by(Rk) %>%
#   summarise(sum_top_scorer = sum(top_scorer_goals),
#             sum_GF = sum(GF))
# prop.test(c(858, 8118), c(2794, 29612))
ggplot(top_scorer2, aes(x=year, y=prop, color=as.factor(Rk))) +
geom_point(alpha = 0.7) +
geom_smooth(method="lm", se = FALSE) +
scale_color_manual(values = c("darkgoldenrod", "blue")) +
ggtitle("The proportion of goals by top scorer in each seasons") +
labs(x="Season", y="The proportion of goals by top scorer", color = "Season Champion")
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
library(lubridate)
source("./scripts/viridis.R")
source("./scripts/ggprob.R")
ggplot(top_scorer2, aes(x=year, y=prop, color=as.factor(Rk))) +
geom_point(alpha = 0.7) +
geom_smooth(method="lm", se = FALSE) +
scale_color_manual(values = c("darkgoldenrod", "blue")) +
ggtitle("The proportion of goals by top scorer in each seasons") +
labs(x="Season", y="The proportion of goals by top scorer", color = "Season Champion")
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
library(lubridate)
source("./scripts/viridis.R")
source("./scripts/ggprob.R")
# get all dates
file_list <- list.files(path="./data")
# load all data
allData <- data.frame()
for(i in 1:length(file_list)){
# get file names
league <- paste("./data/", file_list[i], "/LeagueTable.csv", sep="")
standard <- paste("./data/", file_list[i], "/SquadStandardStats.csv", sep="")
goalkeep <- paste("./data/", file_list[i], "/SquadGoalkeeping.csv", sep="")
# load in each data table and merge it together
LeagueTable <- read.csv(league)
if( file.exists(standard) ){
SquadStandardStats <- read.csv(standard)
LeagueTable <- full_join(LeagueTable, SquadStandardStats, by="Squad")
}
if( file.exists(goalkeep) ){
SquadGoalkeeping <- read.csv(goalkeep)
LeagueTable <- full_join(LeagueTable, SquadGoalkeeping, by="Squad")
}
# add year column to the data
LeagueTable <- select(LeagueTable, -contains(".y")) %>%
mutate(year = substr(file_list[i], 6, 9))
LeagueTable <- LeagueTable %>%
top_n(LeagueTable, 20)
# combine the data into one big table
if( i != 1){
LeagueTable[setdiff(names(allData), names(LeagueTable))] <- NA
allData[setdiff(names(LeagueTable), names(allData))] <- NA
}
allData <- rbind(allData, LeagueTable)
}
allData
championNames <- allData %>%
filter(Rk == 1) %>%
group_by(Squad, Rk) %>%
summarize(
wins = n()
) %>%
ungroup() %>%
mutate(pr = wins/sum(wins)) %>%
arrange(desc(Rk), desc(wins))
championNames$Squad <- reorder(championNames$Squad, -championNames$pr)
ggplot(championNames, aes(x=Squad, y=pr, fill=factor(Rk))) +
geom_col() +
scale_fill_manual(values = c("#e05a5e", "#58e0d5")) +
xlab("Team") +
ylab("Probability of Winning League") +
ggtitle("Percentage of Championship Wins", subtitle = "by Team") +
theme(legend.position = "none")
champions <- allData %>%
filter(Rk == 1)
mean_pt = mean(champions$Pts)
z_pt = 1.960 #this is the 95% confidence level value
s_pt = sd(champions$Pts)
n_pt = nrow(champions)
CI_pt = mean_pt + c(-1,1) * z_pt * s_pt / sqrt(n_pt)
gnorm(mean_pt, s_pt, color = 'cyan') +
geom_vline(xintercept = CI_pt[1], color = 'hotpink', linetype = 2) +
geom_vline(xintercept = CI_pt[2], color = 'hotpink', linetype = 2) +
geom_text(aes(CI_pt[1],-0.001,label=round(CI_pt[1]))) +
geom_text(aes(CI_pt[2],-0.001,label=round(CI_pt[2]))) +
ggtitle('Normal distributions of champions points') +
xlab('points')
mean_wins = mean(champions$W.x)
z_wins = 1.960 #this is the 95% confidence level value
s_wins = sd(champions$W.x)
n_wins = nrow(champions)
CI_wins = mean_wins + c(-1,1) * z_wins * s_wins / sqrt(n_wins)
gnorm(mean_wins, s_wins, color = 'cyan') +
geom_vline(xintercept = CI_wins[1], color = 'hotpink', linetype = 2) +
geom_vline(xintercept = CI_wins[2], color = 'hotpink', linetype = 2) +
geom_text(aes(CI_wins[1],-0.002,label=round(CI_wins[1]))) +
geom_text(aes(CI_wins[2],-0.002,label=round(CI_wins[2]))) +
ggtitle('Normal distributions of champions wins') +
xlab('Number of Wins')
a <- allData %>%
filter(allData$Saves != "N/A") %>%
filter(Rk == "1") %>%
mutate(year = as.numeric(year)) %>%
select(Saves, year)
a %>%
ggplot(aes(x = year, y = Saves)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
ggtitle("Number of Saves of Champion")
lm0 <- lm(Saves~year, a)
library(modelr)
a <- a %>%
add_residuals(lm0) %>%
add_predictions(lm0)
ggplot(a, aes(x=year, y =resid)) +
geom_point() +
xlab("Years") +
ylab("Residuals") +
geom_hline(aes(yintercept=0), color="red", linetype = "dashed")
ci_a <- a %>%
pull(Saves)
t.test(ci_a)
b <- allData %>%
filter(allData$Saves != "N/A") %>%
filter(Rk == "1") %>%
mutate(year = as.numeric(year)) %>%
select(GF, year)
b %>%
ggplot(aes(x = year, y = GF)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
ylab("Goals") +
ggtitle("Number of Goals of Champion")
lm1 <- lm(GF~year, b)
library(modelr)
b <- b %>%
add_residuals(lm1) %>%
add_predictions(lm1)
ggplot(b, aes(x=year, y =resid)) +
geom_point() +
xlab("Years") +
ylab("Residuals") +
geom_hline(aes(yintercept=0), color="red", linetype = "dashed")
ci_b <- b %>%
pull(GF)
t.test(ci_b)
savesAndGoals <- allData %>%
mutate(Rk =
case_when(
Rk == 1 ~ "Champion",
TRUE ~ "Not Champion",
)
) %>%
group_by(Rk) %>%
select(Saves, GF, GA.x, Rk) %>%
drop_na()
savesAndGoals %>%
ggplot(aes(x=Saves, y=GF, color=as.factor(Rk))) +
geom_point(alpha = 0.5) +
geom_smooth(method="lm", se = FALSE) +
scale_color_manual(values = c("#e05a5e", "#58e0d5")) +
labs(color = "Season Champion") +
ggtitle("Goals vs Saves", subtitle = "By Chamion and Non-Champion teams") +
xlab("Saves (in a season)") +
ylab("Goals For (in a season)")
sgChamp <- savesAndGoals %>%
filter(Rk == "Champion")
sgNonChamp <- savesAndGoals %>%
filter(Rk != "Champion")
champLm <- lm(Saves~GF, sgChamp)
nonChampLm <-  lm(Saves~GF, sgNonChamp)
summary(lm(Saves~GF+Rk, savesAndGoals))
savesAndGoals %>%
ggplot(aes(x=Saves, y=GA.x, color=as.factor(Rk))) +
geom_point(alpha = 0.5) +
geom_smooth(method="lm", se = FALSE) +
scale_color_manual(values = c("#e05a5e", "#58e0d5")) +
labs(color = "Season Champion") +
ggtitle("Goals vs Saves", subtitle = "By Chamion and Non-Champion teams") +
xlab("Saves (in a season)") +
ylab("Goals Against (in a season)")
top_scorer <- champions %>%
mutate(top_scorer_goals = as.numeric(str_trim(str_sub(Top.Team.Scorer, -2, -1)))) %>%
# mutate(t2 = str_extract(Top.Team.Scorer, "[\d+][?!.*\d]$")) %>%
mutate(prop = top_scorer_goals / GF) %>%
mutate(year = as.numeric(year)) %>%
select(Squad, top_scorer_goals, GF, prop, year)
# ggplot(top_scorer, aes(x=year, y=prop)) +
#   geom_point() +
#   geom_smooth(method = "lm", se = FALSE, color = "hotpink") +
#   ggtitle("The proportion of goals by top scorer in each seasons") +
#   labs(x="Season", y="The proportion of goals by top scorer")
top_scorer2 <- allData %>%
mutate(Rk = case_when(Rk == 1 ~ "Champion",
TRUE ~ "Not Champion",)) %>%
mutate(top_scorer_goals = as.numeric(str_trim(str_sub(Top.Team.Scorer, -2, -1)))) %>%
mutate(prop = top_scorer_goals / GF) %>%
mutate(year = as.numeric(year)) %>%
select(Rk, top_scorer_goals, GF, prop, year)
not_champion_top_scorer <- top_scorer2 %>%
filter(Rk == "Not Champion") %>%
group_by(year) %>%
summarise(not_champion_prop = mean(prop))
champion_top_scorer <- top_scorer2 %>%
filter(Rk == "Champion") %>%
group_by(year) %>%
summarise(champion_prop = mean(prop)) %>%
inner_join(not_champion_top_scorer)
champion_top_scorer2 = gather(champion_top_scorer, event, total, champion_prop:not_champion_prop)
# champion_top_scorer2
ggplot(champion_top_scorer2, aes(year, total, fill=event)) +
geom_bar(stat = "identity", position = 'dodge') +
ggtitle("Comparison between champions and other teams", subtitle = ":the proportion of goals by top scorer in each seasons") +
labs(x="Season", y="The proportion of goals by top scorer", color = "Season Champion")
# lm_s = lm()
t.test(champion_top_scorer$champion_prop, champion_top_scorer$not_champion_prop, alternative = "greater")
# top_scorer2 %>%
#   group_by(Rk) %>%
#   summarise(sum_top_scorer = sum(top_scorer_goals),
#             sum_GF = sum(GF))
# prop.test(c(858, 8118), c(2794, 29612))
ggplot(top_scorer2, aes(x=year, y=prop, color=as.factor(Rk))) +
geom_point(alpha = 0.7) +
geom_smooth(method="lm", se = FALSE) +
scale_color_manual(values = c("darkgoldenrod", "blue")) +
ggtitle("The proportion of goals by top scorer in each seasons") +
labs(x="Season", y="The proportion of goals by top scorer", color = "Season Champion")
champion_top_scorer2 = gather(champion_top_scorer, event, total, champion_prop:not_champion_prop)
# champion_top_scorer2
ggplot(champion_top_scorer2, aes(year, total, fill=event)) +
geom_boxplot(stat = "identity", position = 'dodge') +
ggtitle("Comparison between champions and other teams", subtitle = ":the proportion of goals by top scorer in each seasons") +
labs(x="Season", y="The proportion of goals by top scorer", color = "Season Champion")
champion_top_scorer2 = gather(champion_top_scorer, event, total, champion_prop:not_champion_prop)
# champion_top_scorer2
ggplot(champion_top_scorer2, aes(year, total, fill=event)) +
geom_boxplot() +
ggtitle("Comparison between champions and other teams", subtitle = ":the proportion of goals by top scorer in each seasons") +
labs(x="Season", y="The proportion of goals by top scorer", color = "Season Champion")
champion_top_scorer2 = gather(champion_top_scorer, event, total, champion_prop:not_champion_prop)
# champion_top_scorer2
ggplot(champion_top_scorer2, aes(total, fill=event)) +
geom_boxplot() +
ggtitle("Comparison between champions and other teams", subtitle = ":the proportion of goals by top scorer in each seasons") +
labs(x="Season", y="The proportion of goals by top scorer", color = "Season Champion")
champion_top_scorer2 = gather(champion_top_scorer, event, total, champion_prop:not_champion_prop)
# champion_top_scorer2
ggplot(champion_top_scorer2, aes(total, fill=event)) +
geom_boxplot() +
ggtitle("Comparison between champions and other teams", subtitle = ":the proportion of goals by top scorer in each seasons")
# labs(x="Season", y="The proportion of goals by top scorer", color = "Season Champion")
champion_top_scorer2 = gather(champion_top_scorer, event, total, champion_prop:not_champion_prop)
# champion_top_scorer2
ggplot(champion_top_scorer2, aes(y=total, fill=event)) +
geom_boxplot() +
ggtitle("Comparison between champions and other teams", subtitle = ":the proportion of goals by top scorer in each seasons")
# labs(x="Season", y="The proportion of goals by top scorer", color = "Season Champion")
View(champion_top_scorer)
View(champion_top_scorer2)
champion_top_scorer2 = gather(champion_top_scorer, event, total, champion_prop:not_champion_prop)
# champion_top_scorer2
ggplot(champion_top_scorer2, aes(x=event, y=total, fill=event)) +
geom_boxplot() +
ggtitle("Comparison between champions and other teams", subtitle = ":the proportion of goals by top scorer in each seasons")
# labs(x="Season", y="The proportion of goals by top scorer", color = "Season Champion")
champion_top_scorer2 = gather(champion_top_scorer, event, total, champion_prop:not_champion_prop)
# champion_top_scorer2
ggplot(champion_top_scorer2, aes(x=event, y=total, fill=event)) +
geom_boxplot() +
ggtitle("Comparison between champions and other teams", subtitle = ":the proportion of goals by top scorer in each seasons") +
labs(x="Champions or not", y="The proportion of goals by top scorer", color = "Season Champion")
champion_top_scorer2 = gather(champion_top_scorer, event, total, champion_prop:not_champion_prop) %>%
mutate(`Season Champion` = event)
# champion_top_scorer2
ggplot(champion_top_scorer2, aes(x=event, y=total, fill=event)) +
geom_boxplot() +
ggtitle("Comparison between champions and other teams", subtitle = ":the proportion of goals by top scorer in each seasons") +
labs(x="Champions or not", y="The proportion of goals by top scorer", color = "Season Champion") +
champion_top_scorer2 = gather(champion_top_scorer, event, total, champion_prop:not_champion_prop) %>%
mutate(`Season Champion` = event)
# champion_top_scorer2
ggplot(champion_top_scorer2, aes(x=event, y=total, fill=event)) +
geom_boxplot() +
ggtitle("Comparison between champions and other teams", subtitle = ":the proportion of goals by top scorer in each seasons") +
labs(x="Champions or not", y="The proportion of goals by top scorer", color = "Season Champion")
champion_top_scorer2 = gather(champion_top_scorer, event, total, champion_prop:not_champion_prop) %>%
mutate(`Season Champion` = event)
# champion_top_scorer2
ggplot(champion_top_scorer2, aes(x=`Season Champion`, y=total, fill=`Season Champion`)) +
geom_boxplot() +
ggtitle("Comparison between champions and other teams", subtitle = ":the proportion of goals by top scorer in each seasons") +
labs(x="Champions or not", y="The proportion of goals by top scorer", color = "Season Champion")
